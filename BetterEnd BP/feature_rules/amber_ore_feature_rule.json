{
  "format_version": "1.21.0",
  "minecraft:feature_rules": {
    "description": {
      "identifier": "betterend:amber_ore_feature_rule",
      "places_feature": "betterend:amber_land/amber_ore_feature"
    },
    "conditions": {
      "placement_pass": "after_underground_pass",
      "minecraft:biome_filter": {
          "test": "has_biome_tag",
          "operator": "==",
          "value": "the_end"
        }
    },
    "distribution": {
      "iterations": "t.BiomeSize = 512; t.BiomeTransition = q.noise(v.originx / 256, v.originz / 256) * 0.01 + q.noise(v.originx / 128, v.originz / 128) * 0.05 + q.noise(v.originx / 64, v.originz / 64) * 0.025 + q.noise(v.originx / 32, v.originz / 32) * 0.0105 + q.noise(v.originx / 16, v.originz / 16) * 0.0225 + q.noise(v.originx / 8, v.originz / 8) * 0.0235; t.x = v.originx / t.BiomeSize + t.BiomeTransition; t.z = v.originz / t.BiomeSize + t.BiomeTransition; t.d1 = 999.0; t.d2 = 999.0; t.c1 = 0.0; loop(9, { t.px = math.floor(t.x) + math.mod(0,3) - 1; t.pz = math.floor(t.z) + math.floor(0/3) - 1; t.rx = t.px * 127.1 + t.pz * 311.7; t.rz = t.pz * 269.5 + t.px * 183.3; t.rx = (2.0 * math.abs(t.rx / 3.14 - 2.0 * math.floor(t.rx / (2.0 * 3.14)) - 1.0) - 1.0) * 41415.92653; t.rz = (2.0 * math.abs(t.rz / 3.14 - 2.0 * math.floor(t.rz / (2.0 * 3.14)) - 1.0) - 1.0) * 41415.92653; t.rx = (t.rx - math.floor(t.rx)) / 2.0; t.rz = (t.rz - math.floor(t.rz)) / 2.0; t.d = math.pow(t.px + t.rx - t.x, 2) + math.pow(t.pz + t.rz - t.z, 2); (t.d < t.d1) ? { t.d2 = t.d1; t.d1 = t.d; t.c1 = t.rx; } : { (t.d < t.d2) ? { t.d2 = t.d;}; }; }); t.AmberLand = math.floor(t.c1 * 18); return (t.AmberLand == 0 && (math.abs(v.originx) > 400 || math.abs(v.originz) > 400)) ? 5 : 0;",
      "x": {
        "distribution": "uniform",
        "extent": [ 0, 16 ]
      },
      "y": {
        "distribution": "uniform",
        "extent": [ 10, 65 ]
      },
      "z": {
        "distribution": "uniform",
        "extent": [ 0, 16 ]
      }
    }
  }
}
