{
  "format_version": "1.21.0",
  "minecraft:feature_rules": {
    "description": {
      "identifier": "betterend:surface_feature_rule",
      "places_feature": "betterend:gen/terrain/biome_block"
    },
    "conditions": {
      "placement_pass": "first_pass",
      "minecraft:biome_filter": {
          "test": "has_biome_tag",
          "operator": "==",
          "value": "the_end"
        }
    },
    "distribution": {
      "iterations": "(math.abs(v.originx) > 400 || math.abs(v.originz) > 400) ? 35 : 0",
      "x": {
        "distribution": "uniform",
        "extent": [ 0, 16 ]
      },
      "y": "t.BiomeSize = 512; t.BiomeTransition = q.noise(v.worldx / 256, v.worldz / 256) * 0.01 + q.noise(v.worldx / 128, v.worldz / 128) * 0.05 + q.noise(v.worldx / 64, v.worldz / 64) * 0.025; t.x = v.worldx / t.BiomeSize + t.BiomeTransition; t.z = v.worldz / t.BiomeSize + t.BiomeTransition; t.d1 = 999.0; t.d2 = 999.0; t.c1 = 0.0; t.i = 0.0; loop(9, { t.px = math.floor(t.x) + math.mod(t.i,3) - 1; t.pz = math.floor(t.z) + math.floor(t.i/3) - 1; t.rx = t.px * 127.1 + t.pz * 311.7; t.rz = t.pz * 269.5 + t.px * 183.3; t.rx = (2.0 * math.abs(t.rx / 3.14 - 2.0 * math.floor(t.rx / (2.0 * 3.14)) - 1.0) - 1.0) * 41415.92653; t.rz = (2.0 * math.abs(t.rz / 3.14 - 2.0 * math.floor(t.rz / (2.0 * 3.14)) - 1.0) - 1.0) * 41415.92653; t.rx = (t.rx - math.floor(t.rx)); t.rz = (t.rz - math.floor(t.rz)); t.d = math.pow(t.px + t.rx - t.x, 2) + math.pow(t.pz + t.rz - t.z, 2); (t.d < t.d1) ? { t.d2 = t.d1; t.d1 = t.d; t.c1 = t.rx; } : { (t.d < t.d2) ? { t.d2 = t.d;}; }; t.i = t.i + 1; }); t.BetterEndBiome = math.floor(t.c1 * 18); t.surface = q.heightmap(v.worldx, v.worldz); t.surface > math.random(56, 59) ? { return t.surface; } : { return 400; };",
      "z": {
        "distribution": "uniform",
        "extent": [ 0, 16 ]
      }
    }
  }
}
