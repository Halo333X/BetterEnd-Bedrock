{
  "format_version": "1.21.0",
  "minecraft:feature_rules": {
    "description": {
      "identifier": "betterend:amber_growing_plant_feature_rule",
      "places_feature": "betterend:amber_land/amber_growing_plant_weighted_random_feature"
    },
    "conditions": {
      "placement_pass": "before_underground_pass",
      "minecraft:biome_filter": {
          "test": "has_biome_tag",
          "operator": "==",
          "value": "the_end"
        }
    },
    "distribution": {
      "iterations": "(math.abs(v.originx) > 400 || math.abs(v.originz) > 400) ? 1 : 0",
      "x": {
        "distribution": "uniform",
        "extent": [ 0, 16 ]
      },
      "y": "
      t.lanceleaf = math.random_integer(1, 3);
      t.SizePlant = 8;
      
        t.BiomeSize = 512; 
        
        t.BiomeTransition = q.noise(v.worldx / 256, v.worldz / 256) * 0.01 + q.noise(v.worldx / 128, v.worldz / 128) * 0.05 + q.noise(v.worldx / 64, v.worldz / 64) * 0.025 + q.noise(v.worldx / 32, v.worldz / 32) * 0.0105 + q.noise(v.worldx / 16, v.worldz / 16) * 0.0125 + q.noise(v.worldx / 8, v.worldz / 8) * 0.0135; 
        
        t.x = v.worldx / t.BiomeSize + t.BiomeTransition; 
        t.z = v.worldz / t.BiomeSize + t.BiomeTransition; 
        
        t.d1 = 999.0; 
        t.d2 = 999.0; 
        t.c1 = 0.0; 
        
        loop(4, { 
          t.px = math.floor(t.x) + math.mod(0,2); 
          t.pz = math.floor(t.z) + math.floor(0/2);
          
          t.rx = t.px * 127.1 + t.pz * 311.7; 
          t.rz = t.pz * 269.5 + t.px * 183.3;
          
          t.rx = (2.0 * math.abs(t.rx / 3.14 - 2.0 * math.floor(t.rx / (2.0 * 3.14)) - 1.0) - 1.0) * 41415.92653; 
          t.rz = (2.0 * math.abs(t.rz / 3.14 - 2.0 * math.floor(t.rz / (2.0 * 3.14)) - 1.0) - 1.0) * 41415.92653;
          
          t.rx = (t.rx - math.floor(t.rx)) / 2.0; 
          t.rz = (t.rz - math.floor(t.rz)) / 2.0;
          
          t.d = math.pow(t.px + t.rx - t.x, 2) + math.pow(t.pz + t.rz - t.z, 2); 
          
          (t.d < t.d1) ? { 
            t.d2 = t.d1; 
            t.d1 = t.d; 
            t.c1 = t.rx; 
          } : { 
            (t.d < t.d2) ? { 
              t.d2 = t.d;
            }; 
          }; 
        }); 

        t.AmberLand = math.floor(t.c1 * 18);
        return (t.AmberLand == 0) ? q.heightmap(v.worldx, v.worldz) + 0 : - 1;",
      "z": {
        "distribution": "uniform",
        "extent": [ 0, 16 ]
      }
    }
  }
}
